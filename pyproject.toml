[project]
name = "beartrak-search"
version = "0.1.0"
description = "FastAPI backend for BearTrak Search with HTMX integration"
readme = "README.md"
authors = [
    { name = "Bearfoot Software", email = "hello@bearfoot.software" }
]
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.2",
    "sqlalchemy>=2.0.41",
    "aiosqlite>=0.21.0",
]

[project.optional-dependencies]
dev = [
    "requests>=2.31.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
]

[project.urls]
Homepage = "https://github.com/jeffdasilva/beartrak-search"
Repository = "https://github.com/jeffdasilva/beartrak-search"

[tool.uv]
dev-dependencies = [
    "requests>=2.31.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "mypy>=1.16.1",
    "types-requests>=2.32.4.20250611",
    "ruff>=0.8.18",
    "black>=25.1.0",
    "isort>=6.0.1",
]

# Configure uv workspace
[tool.uv.workspace]
members = []

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "W", "B", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "A", "COM", "C4", "DTZ", "T10", "DJ", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "FIX", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
    # Allow print statements
    "T201",
    # Allow TODO comments
    "TD002", "TD003",
    # Allow relative imports
    "TID252",
    # Allow some additional linting rules
    "COM812", "PLR2004", "S104", "S113", "BLE001", "E501",
    # Allow FastAPI Depends in argument defaults (B008)
    "B008",
    # Allow function calls in dataclass defaults for SQLAlchemy models (RUF009)
    "RUF009",
    # Allow environment variable type issues (PLW1508)
    "PLW1508",
    # Allow unused function arguments for FastAPI lifecycle (ARG001)
    "ARG001",
]
unfixable = [
    # Don't touch unused imports
    "F401",
]

[tool.ruff.lint.per-file-ignores]
# Allow assert statements in test files
"tests/*" = ["S101"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = false
# Set the line length limit used by the formatter.
docstring-code-line-length = 88

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["beartrak_search"]
